name: Deploy

on: [push]

jobs:
  init:
    runs-on: ubuntu-latest
    name: Init
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Terraform
        uses: hashicorp/setup-terraform@v2

      # - name: Init
      #   run: terraform init
      #   working-directory: ./tf

      # - name: Configure
      #   run: terraform plan && terraform apply -auto-approve
      #   working-directory: ./tf
      #   env:
      #     TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     TF_VAR_sentry_dsn: ${{ secrets.SENTRY_DSN }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: init
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: Install NPM packages
        run: npm ci

      - name: Publish to Cloudflare Workers
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          secrets: |
            CLOUDFLARE_API_TOKEN
            CLOUDFLARE_ACCOUNT_ID
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Build Pages
        run: npm run build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages publish public --branch=${{ github.head_ref || github.ref_name }} --project-name=dispoflare

      - name: Generate sourcemap
        run: npm run build -- --sourcemap

      - name: Create a Sentry release
        uses: getsentry/action-release@v1
        continue-on-error: true
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: ./functions ./public
          set_commits: skip
